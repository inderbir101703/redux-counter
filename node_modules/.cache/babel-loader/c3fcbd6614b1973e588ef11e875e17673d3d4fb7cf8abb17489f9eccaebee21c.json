{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  status: \"logout\",\n  notification: null\n};\nconst ui = createSlice({\n  name: \"ui\",\n  initialState,\n  reducers: {\n    logOut(state) {\n      return {\n        ...state,\n        status: \"hide\"\n      };\n    },\n    logIn(state) {\n      return {\n        ...state,\n        status: \"show\"\n      };\n    },\n    showNotifications(state, action) {\n      return {\n        ...state,\n        notification: {\n          status: action.payload.status,\n          title: action.payload.title,\n          message: action.payload.message\n        }\n      };\n    }\n  }\n});\nexport const sendCartData = async items => {\n  return dispatch => {\n    dispatch(ui.actions.showNotifications({\n      status: 'pending',\n      title: 'sending...',\n      message: 'sending cart data'\n    }));\n    try {\n      dispatch(showNotifications({\n        status: 'success',\n        title: 'SUCCESS!',\n        message: 'Sent Cart Data successfully'\n      }));\n    } catch (error) {\n      dispatch(showNotifications({\n        status: 'error',\n        title: 'ERROR!',\n        message: 'Sending cart data failed'\n      }));\n    }\n  };\n};\nexport const sendRequest = async items => {\n  const response = await fetch('https://redux-35f03-default-rtdb.firebaseio.com/cart.json', {\n    method: 'PUT',\n    body: JSON.stringify(items)\n  });\n  if (!response.ok) {\n    throw new Error('Sending cart data failed');\n  }\n};\nexport const {\n  logOut,\n  logIn,\n  showNotifications\n} = ui.actions;\nexport const authReducers = ui.reducer;","map":{"version":3,"names":["createSlice","initialState","status","notification","ui","name","reducers","logOut","state","logIn","showNotifications","action","payload","title","message","sendCartData","items","dispatch","actions","error","sendRequest","response","fetch","method","body","JSON","stringify","ok","Error","authReducers","reducer"],"sources":["/Users/indsingh11/Desktop/react-master-2024/reduxtoolkit/src/store/ui-slice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\n\nconst initialState={status:\"logout\",notification:null}\nconst ui=createSlice({\n    name:\"ui\",\n    initialState,\n    reducers:{\n        logOut(state){\n           return {...state,status: \"hide\" }\n        },\n        logIn(state){\n            return  {...state,status: \"show\"}\n        },\n        showNotifications(state,action){\n            return {\n             ...state,\n             notification:{\n                status:action.payload.status,\n                title:action.payload.title,\n                message:action.payload.message\n             }\n            }\n        }\n    }\n})\n\nexport const sendCartData= async (items)=>{\n\n    return  (dispatch)=>{\n\n        dispatch(ui.actions.showNotifications(\n            {\n                status:'pending',\n                title:'sending...',\n                message:'sending cart data'\n               }))\ntry{\n       \n               dispatch(showNotifications({\n                status:'success',\n                title:'SUCCESS!',\n                message:'Sent Cart Data successfully'\n               }))}\n               catch(error){\n                dispatch(showNotifications({\n                    status:'error',\n                    title:'ERROR!',\n                    message:'Sending cart data failed'\n                   }))}\n               }\n              \n    }\n\n\nexport const  sendRequest= async (items)=>{\n    const response=await fetch('https://redux-35f03-default-rtdb.firebaseio.com/cart.json',{\n        method:'PUT',\n        body:JSON.stringify(items)\n      })\n      if(!response.ok){\n      throw new Error('Sending cart data failed')\n      }\n      \n}\nexport const {logOut,logIn,showNotifications} =ui.actions\nexport const authReducers=ui.reducer"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAG9C,MAAMC,YAAY,GAAC;EAACC,MAAM,EAAC,QAAQ;EAACC,YAAY,EAAC;AAAI,CAAC;AACtD,MAAMC,EAAE,GAACJ,WAAW,CAAC;EACjBK,IAAI,EAAC,IAAI;EACTJ,YAAY;EACZK,QAAQ,EAAC;IACLC,MAAMA,CAACC,KAAK,EAAC;MACV,OAAO;QAAC,GAAGA,KAAK;QAACN,MAAM,EAAE;MAAO,CAAC;IACpC,CAAC;IACDO,KAAKA,CAACD,KAAK,EAAC;MACR,OAAQ;QAAC,GAAGA,KAAK;QAACN,MAAM,EAAE;MAAM,CAAC;IACrC,CAAC;IACDQ,iBAAiBA,CAACF,KAAK,EAACG,MAAM,EAAC;MAC3B,OAAO;QACN,GAAGH,KAAK;QACRL,YAAY,EAAC;UACVD,MAAM,EAACS,MAAM,CAACC,OAAO,CAACV,MAAM;UAC5BW,KAAK,EAACF,MAAM,CAACC,OAAO,CAACC,KAAK;UAC1BC,OAAO,EAACH,MAAM,CAACC,OAAO,CAACE;QAC1B;MACD,CAAC;IACL;EACJ;AACJ,CAAC,CAAC;AAEF,OAAO,MAAMC,YAAY,GAAE,MAAOC,KAAK,IAAG;EAEtC,OAASC,QAAQ,IAAG;IAEhBA,QAAQ,CAACb,EAAE,CAACc,OAAO,CAACR,iBAAiB,CACjC;MACIR,MAAM,EAAC,SAAS;MAChBW,KAAK,EAAC,YAAY;MAClBC,OAAO,EAAC;IACT,CAAC,CAAC,CAAC;IAClB,IAAG;MAEYG,QAAQ,CAACP,iBAAiB,CAAC;QAC1BR,MAAM,EAAC,SAAS;QAChBW,KAAK,EAAC,UAAU;QAChBC,OAAO,EAAC;MACT,CAAC,CAAC,CAAC;IAAA,CAAC,CACJ,OAAMK,KAAK,EAAC;MACXF,QAAQ,CAACP,iBAAiB,CAAC;QACvBR,MAAM,EAAC,OAAO;QACdW,KAAK,EAAC,QAAQ;QACdC,OAAO,EAAC;MACT,CAAC,CAAC,CAAC;IAAA;EACP,CAAC;AAEZ,CAAC;AAGL,OAAO,MAAOM,WAAW,GAAE,MAAOJ,KAAK,IAAG;EACtC,MAAMK,QAAQ,GAAC,MAAMC,KAAK,CAAC,2DAA2D,EAAC;IACnFC,MAAM,EAAC,KAAK;IACZC,IAAI,EAACC,IAAI,CAACC,SAAS,CAACV,KAAK;EAC3B,CAAC,CAAC;EACF,IAAG,CAACK,QAAQ,CAACM,EAAE,EAAC;IAChB,MAAM,IAAIC,KAAK,CAAC,0BAA0B,CAAC;EAC3C;AAEN,CAAC;AACD,OAAO,MAAM;EAACrB,MAAM;EAACE,KAAK;EAACC;AAAiB,CAAC,GAAEN,EAAE,CAACc,OAAO;AACzD,OAAO,MAAMW,YAAY,GAACzB,EAAE,CAAC0B,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}